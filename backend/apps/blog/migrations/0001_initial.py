# Generated by Django 5.1.4 on 2024-12-17 16:29

import django.db.models.deletion
import django.utils.timezone
import django_summernote.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(help_text='Enter the category name.', max_length=100, verbose_name='Category Name')),
                ('slug', models.SlugField(help_text='Enter a unique slug for the category (used in the URL).', unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, help_text='Optional: Enter a description for the category.', verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('site_title', models.CharField(max_length=255, verbose_name='Site Title')),
                ('site_subtitle', models.CharField(blank=True, max_length=512, null=True, verbose_name='Site Subtitle')),
                ('site_description', models.TextField(blank=True, null=True, verbose_name='Site Description')),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='preference/', verbose_name='Site Logo')),
                ('site_favicon', models.ImageField(blank=True, null=True, upload_to='preference/', verbose_name='Site Favicon')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Contact Email')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Contact Phone')),
            ],
            options={
                'verbose_name': 'Preference',
                'verbose_name_plural': 'Preference',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(help_text='Enter the tag name.', max_length=100, unique=True, verbose_name='Tag Name')),
                ('slug', models.SlugField(help_text='Enter a unique slug for the tag (used in the URL).', unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Navbar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('link', models.URLField(verbose_name='Link')),
                ('icon', models.CharField(blank=True, max_length=255, null=True, verbose_name='Icon')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('preference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='navbars', to='blog.preference', verbose_name='Preference')),
            ],
            options={
                'verbose_name': 'Navigation Item',
                'verbose_name_plural': 'Navigation Items',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Slideshow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('image', models.ImageField(upload_to='slideshows/images/', verbose_name='Image')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('preference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slideshows', to='blog.preference', verbose_name='Preference')),
            ],
            options={
                'verbose_name': 'Slideshow',
                'verbose_name_plural': 'Slideshow',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('facebook_url', models.URLField(blank=True, max_length=512, null=True, verbose_name='Facebook URL')),
                ('twitter_url', models.URLField(blank=True, max_length=512, null=True, verbose_name='Twitter URL')),
                ('instagram_url', models.URLField(blank=True, max_length=512, null=True, verbose_name='Instagram URL')),
                ('linkedin_url', models.URLField(blank=True, max_length=512, null=True, verbose_name='LinkedIn URL')),
                ('preference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_media', to='blog.preference', verbose_name='Preference')),
            ],
            options={
                'verbose_name': 'Social Media',
                'verbose_name_plural': 'Social Media',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('title', models.CharField(help_text='Enter the title of the post.', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(help_text='Enter a unique slug for the post (used in the URL).', unique=True, verbose_name='Slug')),
                ('content', django_summernote.fields.SummernoteTextField(help_text='Enter the full content of the post.', verbose_name='Content')),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Enter the publication date and time.', verbose_name='Publication Date')),
                ('kind', models.CharField(choices=[('PAGE', 'Page'), ('POST', 'Post')], default='POST', max_length=10, verbose_name='Type')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published')], default='DRAFT', help_text='Select the status of the post.', max_length=10, verbose_name='Status')),
                ('featured_image', models.ImageField(blank=True, help_text='Upload a featured image for the post.', null=True, upload_to='posts/images/', verbose_name='Featured Image')),
                ('author', models.ForeignKey(help_text='Select the author of the post.', on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('categories', models.ManyToManyField(blank=True, help_text='Select categories for the post.', related_name='posts', to='blog.category', verbose_name='Categories')),
                ('tags', models.ManyToManyField(blank=True, help_text='Select tags for the post.', related_name='posts', to='blog.tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['-publication_date', '-date_created'],
            },
        ),
    ]
